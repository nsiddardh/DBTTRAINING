{"results": [{"node": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\n\r\n{%- set yaml_metadata -%}\r\n\r\nsource_model: \"emp_src\"\r\nmerge_models: [\"emp1_src\",\"emp2_src\"]\r\nunmatched_master_mode: \"Keep\"\r\nmerge_keys: [\"empid\"]\r\n\r\nderived_columns:\r\n    emp_id: \"emp_src.empid\"\r\n    emp_name: \"emp1_src.empname\"\r\n    deptid: \"emp2_src.deptid\"\r\n\r\n\r\n\r\n{% endset %}\r\n\r\n\r\n{% set metadata_dict = fromyaml(yaml_metadata) %}\r\n\r\n{{ PxMerge_macro(metadata_dict) }}", "compiled": true, "database": "TESTDBT", "schema": "DBT_SNAMBURI", "fqn": ["dbttraining", "dsstage_models", "PxMerge"], "unique_id": "model.dbttraining.PxMerge", "package_name": "dbttraining", "root_path": "E:\\Training\\DBT\\DBTTRAINING", "path": "dsstage_models\\PxMerge.sql", "original_file_path": "models\\dsstage_models\\PxMerge.sql", "name": "PxMerge", "resource_type": "model", "alias": "PxMerge", "checksum": {"name": "sha256", "checksum": "6620f137d7bc0e6540db833f3fce416becd55649d0dd8a2a0e37864d963f71ce"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["emp_src"]], "sources": [], "depends_on": {"macros": ["macro.dbttraining.PxMerge_macro", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.dbttraining.emp_src"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbttraining\\models\\dsstage_models\\PxMerge.sql", "deferred": false, "compiled_sql": "\n\n\n\n\nSELECT emp_src.empid AS emp_id,\n    emp1_src.empname AS emp_name,\n    emp2_src.deptid AS deptid\nFROM (select *, MD5(empid) as src_key_list from emp_src ) emp_src\n        left outer join \n        (select *, MD5(empid) as emp1_src_key from emp1_src)emp1_src \n        on emp_src.src_key_list = emp1_src.emp1_src_key\n        left outer join \n        (select *, MD5(empid) as emp2_src_key from emp2_src)emp2_src \n        on emp_src.src_key_list = emp2_src.emp2_src_key", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nSELECT emp_src.empid AS emp_id,\n    emp1_src.empname AS emp_name,\n    emp2_src.deptid AS deptid\nFROM (select *, MD5(empid) as src_key_list from emp_src ) emp_src\n        left outer join \n        (select *, MD5(empid) as emp1_src_key from emp1_src)emp1_src \n        on emp_src.src_key_list = emp1_src.emp1_src_key\n        left outer join \n        (select *, MD5(empid) as emp2_src_key from emp2_src)emp2_src \n        on emp_src.src_key_list = emp2_src.emp2_src_key"}, "error": null, "status": "SUCCESS 1", "execution_time": 3.078474760055542, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-08-27T19:21:22.627815Z", "completed_at": "2021-08-27T19:21:24.193140Z"}, {"name": "execute", "started_at": "2021-08-27T19:21:24.195137Z", "completed_at": "2021-08-27T19:21:25.312255Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2021-08-27T19:21:49.167445Z", "elapsed_time": 181.51537156105042}